<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "org/apache/ibatis/builder/xml/mybatis-3-mapper.dtd">
<mapper namespace="pl.solvd.concerthall.DAO.interfaces.IEventsDAO">
    <sql id="body">
        e.id, e.category
    </sql>
    <select id="getEntityById" resultMap="eventsResultMap">
        SELECT
        <include refid="body"/>
        FROM
        events e
        WHERE id = #{id}
    </select>
    <select id="getAll" resultMap="eventsResultMap">
        SELECT
        <include refid="body"/>
        FROM
        events e
    </select>
    <insert id="addEntity" useGeneratedKeys="true" keyProperty="id">
        insert into events (id, category)
        values (#{id},#{category})
    </insert>
    <update id="updateEntity">
        update events set
        category = #{category}
        where id = #{id}
    </update>
    <delete id="deleteEntity">
        delete from events where id = #{id}
    </delete>
    <select id="findGenresByEventId" resultMap="eventsResultMap">
        SELECT
        e.category, g.type
        FROM
        events e
        JOIN events_has_genre eg ON e.id = eg.events_id
        JOIN genre g ON eg.genre_id = g.id
        where e.id = #{id}
    </select>
    <resultMap id="eventsResultMap" type="pl.solvd.concerthall.binary.Events" autoMapping="false">
        <id column="id" property="id"/>
        <result column="category" property="category"/>
        <collection property="genre" ofType="pl.solvd.concerthall.binary.Genre"
                    resultMap="GenreResultMap"/>
    </resultMap>
    <resultMap id="GenreResultMap" type="pl.solvd.concerthall.binary.Genre" autoMapping="false">
        <id column="id" property="id"/>
        <result column="type" property="type"/>
    </resultMap>
</mapper>
